int f(int x) {
  // bad performance with GCC
  // constexpr int array[] = {1,2,3,4,5,6,7,8,9};
  /*
  当使用 constexpr 定义数组时，如果使用动态索引（即索引在运行时才能确定），
  GCC 编译器可能无法在编译时确定访问哪个数组元素，因此无法将数组访问优化到最佳状态。
  这可能导致生成的代码效率不高，因为每次访问数组时都需要进行运行时计算来确定索引。
  相反，如果使用静态索引（即编译时就能确定的索引），则编译器可以在编译时就完全解析出访问哪个数组元素，
  从而可能将相关的数组访问直接优化为对应的常量值。这样可以生成更高效的代码。
  */
  static constexpr int array[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
  return array[x];
}